// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: metalstack/io/accounting/api/v1/machine_reservation.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MachineReservationReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition    string                 `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Tenant       string                 `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Projectid    string                 `protobuf:"bytes,3,opt,name=projectid,proto3" json:"projectid,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Projectname  string                 `protobuf:"bytes,6,opt,name=projectname,proto3" json:"projectname,omitempty"`
	Id           string                 `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Sizeid       string                 `protobuf:"bytes,8,opt,name=sizeid,proto3" json:"sizeid,omitempty"`
	Amount       int32                  `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	UsedAmount   int32                  `protobuf:"varint,10,opt,name=used_amount,json=usedAmount,proto3" json:"used_amount,omitempty"`
	UnusedAmount int32                  `protobuf:"varint,11,opt,name=unused_amount,json=unusedAmount,proto3" json:"unused_amount,omitempty"`
	Labels       map[string]string      `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MachineReservationReport) Reset() {
	*x = MachineReservationReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReservationReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReservationReport) ProtoMessage() {}

func (x *MachineReservationReport) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReservationReport.ProtoReflect.Descriptor instead.
func (*MachineReservationReport) Descriptor() ([]byte, []int) {
	return file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescGZIP(), []int{0}
}

func (x *MachineReservationReport) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *MachineReservationReport) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *MachineReservationReport) GetProjectid() string {
	if x != nil {
		return x.Projectid
	}
	return ""
}

func (x *MachineReservationReport) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MachineReservationReport) GetProjectname() string {
	if x != nil {
		return x.Projectname
	}
	return ""
}

func (x *MachineReservationReport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineReservationReport) GetSizeid() string {
	if x != nil {
		return x.Sizeid
	}
	return ""
}

func (x *MachineReservationReport) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MachineReservationReport) GetUsedAmount() int32 {
	if x != nil {
		return x.UsedAmount
	}
	return 0
}

func (x *MachineReservationReport) GetUnusedAmount() int32 {
	if x != nil {
		return x.UnusedAmount
	}
	return 0
}

func (x *MachineReservationReport) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type MachineReservationUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *UsageQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Sizeid    *string     `protobuf:"bytes,2,opt,name=sizeid,proto3,oneof" json:"sizeid,omitempty"`
	Partition *string     `protobuf:"bytes,3,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
}

func (x *MachineReservationUsageRequest) Reset() {
	*x = MachineReservationUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReservationUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReservationUsageRequest) ProtoMessage() {}

func (x *MachineReservationUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReservationUsageRequest.ProtoReflect.Descriptor instead.
func (*MachineReservationUsageRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescGZIP(), []int{1}
}

func (x *MachineReservationUsageRequest) GetQuery() *UsageQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *MachineReservationUsageRequest) GetSizeid() string {
	if x != nil && x.Sizeid != nil {
		return *x.Sizeid
	}
	return ""
}

func (x *MachineReservationUsageRequest) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

type MachineReservationUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From             *timestamppb.Timestamp               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To               *timestamppb.Timestamp               `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Usage            []*MachineReservationUsage           `protobuf:"bytes,3,rep,name=usage,proto3" json:"usage,omitempty"`
	AccumulatedUsage *MachineReservationUsageAccumuluated `protobuf:"bytes,4,opt,name=accumulated_usage,json=accumulatedUsage,proto3" json:"accumulated_usage,omitempty"`
}

func (x *MachineReservationUsageResponse) Reset() {
	*x = MachineReservationUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReservationUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReservationUsageResponse) ProtoMessage() {}

func (x *MachineReservationUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReservationUsageResponse.ProtoReflect.Descriptor instead.
func (*MachineReservationUsageResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescGZIP(), []int{2}
}

func (x *MachineReservationUsageResponse) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *MachineReservationUsageResponse) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *MachineReservationUsageResponse) GetUsage() []*MachineReservationUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *MachineReservationUsageResponse) GetAccumulatedUsage() *MachineReservationUsageAccumuluated {
	if x != nil {
		return x.AccumulatedUsage
	}
	return nil
}

type MachineReservationUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition          string `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Tenant             string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Projectid          string `protobuf:"bytes,3,opt,name=projectid,proto3" json:"projectid,omitempty"`
	Id                 string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Sizeid             string `protobuf:"bytes,5,opt,name=sizeid,proto3" json:"sizeid,omitempty"`
	ReservationSeconds string `protobuf:"bytes,6,opt,name=reservation_seconds,json=reservationSeconds,proto3" json:"reservation_seconds,omitempty"`
	Average            string `protobuf:"bytes,7,opt,name=average,proto3" json:"average,omitempty"`
	Projectname        string `protobuf:"bytes,8,opt,name=projectname,proto3" json:"projectname,omitempty"`
	Tenantname         string `protobuf:"bytes,9,opt,name=tenantname,proto3" json:"tenantname,omitempty"`
	Contractnumber     string `protobuf:"bytes,10,opt,name=contractnumber,proto3" json:"contractnumber,omitempty"`
	Debtorid           string `protobuf:"bytes,11,opt,name=debtorid,proto3" json:"debtorid,omitempty"`
}

func (x *MachineReservationUsage) Reset() {
	*x = MachineReservationUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReservationUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReservationUsage) ProtoMessage() {}

func (x *MachineReservationUsage) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReservationUsage.ProtoReflect.Descriptor instead.
func (*MachineReservationUsage) Descriptor() ([]byte, []int) {
	return file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescGZIP(), []int{3}
}

func (x *MachineReservationUsage) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *MachineReservationUsage) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *MachineReservationUsage) GetProjectid() string {
	if x != nil {
		return x.Projectid
	}
	return ""
}

func (x *MachineReservationUsage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineReservationUsage) GetSizeid() string {
	if x != nil {
		return x.Sizeid
	}
	return ""
}

func (x *MachineReservationUsage) GetReservationSeconds() string {
	if x != nil {
		return x.ReservationSeconds
	}
	return ""
}

func (x *MachineReservationUsage) GetAverage() string {
	if x != nil {
		return x.Average
	}
	return ""
}

func (x *MachineReservationUsage) GetProjectname() string {
	if x != nil {
		return x.Projectname
	}
	return ""
}

func (x *MachineReservationUsage) GetTenantname() string {
	if x != nil {
		return x.Tenantname
	}
	return ""
}

func (x *MachineReservationUsage) GetContractnumber() string {
	if x != nil {
		return x.Contractnumber
	}
	return ""
}

func (x *MachineReservationUsage) GetDebtorid() string {
	if x != nil {
		return x.Debtorid
	}
	return ""
}

type MachineReservationUsageAccumuluated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lifetime *durationpb.Duration `protobuf:"bytes,1,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
}

func (x *MachineReservationUsageAccumuluated) Reset() {
	*x = MachineReservationUsageAccumuluated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReservationUsageAccumuluated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReservationUsageAccumuluated) ProtoMessage() {}

func (x *MachineReservationUsageAccumuluated) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReservationUsageAccumuluated.ProtoReflect.Descriptor instead.
func (*MachineReservationUsageAccumuluated) Descriptor() ([]byte, []int) {
	return file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescGZIP(), []int{4}
}

func (x *MachineReservationUsageAccumuluated) GetLifetime() *durationpb.Duration {
	if x != nil {
		return x.Lifetime
	}
	return nil
}

var File_metalstack_io_accounting_api_v1_machine_reservation_proto protoreflect.FileDescriptor

var file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDesc = []byte{
	0x0a, 0x39, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x69, 0x6f, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6d, 0x65, 0x74,
	0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x6d,
	0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x69, 0x6f, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x03, 0x0a, 0x18,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x7a, 0x65,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x01, 0x0a, 0x1e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x02, 0x0a, 0x1f, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x4e, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x71, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x52, 0x10, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe6, 0x02, 0x0a, 0x17, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x7a, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x7a, 0x65,
	0x69, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x62, 0x74, 0x6f,
	0x72, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x62, 0x74, 0x6f,
	0x72, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x23, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x69,
	0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x32, 0xf1, 0x03, 0x0a, 0x19, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6a, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x39, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6d, 0x0a, 0x08, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x39, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x07, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x8a, 0x01, 0x0a, 0x05, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescOnce sync.Once
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescData = file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDesc
)

func file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescGZIP() []byte {
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescOnce.Do(func() {
		file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescData = protoimpl.X.CompressGZIP(file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescData)
	})
	return file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDescData
}

var file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_metalstack_io_accounting_api_v1_machine_reservation_proto_goTypes = []any{
	(*MachineReservationReport)(nil),            // 0: metalstack.io.accounting.api.v1.MachineReservationReport
	(*MachineReservationUsageRequest)(nil),      // 1: metalstack.io.accounting.api.v1.MachineReservationUsageRequest
	(*MachineReservationUsageResponse)(nil),     // 2: metalstack.io.accounting.api.v1.MachineReservationUsageResponse
	(*MachineReservationUsage)(nil),             // 3: metalstack.io.accounting.api.v1.MachineReservationUsage
	(*MachineReservationUsageAccumuluated)(nil), // 4: metalstack.io.accounting.api.v1.MachineReservationUsageAccumuluated
	nil,                           // 5: metalstack.io.accounting.api.v1.MachineReservationReport.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*UsageQuery)(nil),            // 7: metalstack.io.accounting.api.v1.UsageQuery
	(*durationpb.Duration)(nil),   // 8: google.protobuf.Duration
	(*Empty)(nil),                 // 9: metalstack.io.accounting.api.v1.Empty
}
var file_metalstack_io_accounting_api_v1_machine_reservation_proto_depIdxs = []int32{
	6,  // 0: metalstack.io.accounting.api.v1.MachineReservationReport.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 1: metalstack.io.accounting.api.v1.MachineReservationReport.labels:type_name -> metalstack.io.accounting.api.v1.MachineReservationReport.LabelsEntry
	7,  // 2: metalstack.io.accounting.api.v1.MachineReservationUsageRequest.query:type_name -> metalstack.io.accounting.api.v1.UsageQuery
	6,  // 3: metalstack.io.accounting.api.v1.MachineReservationUsageResponse.from:type_name -> google.protobuf.Timestamp
	6,  // 4: metalstack.io.accounting.api.v1.MachineReservationUsageResponse.to:type_name -> google.protobuf.Timestamp
	3,  // 5: metalstack.io.accounting.api.v1.MachineReservationUsageResponse.usage:type_name -> metalstack.io.accounting.api.v1.MachineReservationUsage
	4,  // 6: metalstack.io.accounting.api.v1.MachineReservationUsageResponse.accumulated_usage:type_name -> metalstack.io.accounting.api.v1.MachineReservationUsageAccumuluated
	8,  // 7: metalstack.io.accounting.api.v1.MachineReservationUsageAccumuluated.lifetime:type_name -> google.protobuf.Duration
	0,  // 8: metalstack.io.accounting.api.v1.MachineReservationService.Added:input_type -> metalstack.io.accounting.api.v1.MachineReservationReport
	0,  // 9: metalstack.io.accounting.api.v1.MachineReservationService.Modified:input_type -> metalstack.io.accounting.api.v1.MachineReservationReport
	0,  // 10: metalstack.io.accounting.api.v1.MachineReservationService.Deleted:input_type -> metalstack.io.accounting.api.v1.MachineReservationReport
	1,  // 11: metalstack.io.accounting.api.v1.MachineReservationService.Usage:input_type -> metalstack.io.accounting.api.v1.MachineReservationUsageRequest
	9,  // 12: metalstack.io.accounting.api.v1.MachineReservationService.Added:output_type -> metalstack.io.accounting.api.v1.Empty
	9,  // 13: metalstack.io.accounting.api.v1.MachineReservationService.Modified:output_type -> metalstack.io.accounting.api.v1.Empty
	9,  // 14: metalstack.io.accounting.api.v1.MachineReservationService.Deleted:output_type -> metalstack.io.accounting.api.v1.Empty
	2,  // 15: metalstack.io.accounting.api.v1.MachineReservationService.Usage:output_type -> metalstack.io.accounting.api.v1.MachineReservationUsageResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_metalstack_io_accounting_api_v1_machine_reservation_proto_init() }
func file_metalstack_io_accounting_api_v1_machine_reservation_proto_init() {
	if File_metalstack_io_accounting_api_v1_machine_reservation_proto != nil {
		return
	}
	file_metalstack_io_accounting_api_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MachineReservationReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MachineReservationUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MachineReservationUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MachineReservationUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MachineReservationUsageAccumuluated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_io_accounting_api_v1_machine_reservation_proto_goTypes,
		DependencyIndexes: file_metalstack_io_accounting_api_v1_machine_reservation_proto_depIdxs,
		MessageInfos:      file_metalstack_io_accounting_api_v1_machine_reservation_proto_msgTypes,
	}.Build()
	File_metalstack_io_accounting_api_v1_machine_reservation_proto = out.File
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_rawDesc = nil
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_goTypes = nil
	file_metalstack_io_accounting_api_v1_machine_reservation_proto_depIdxs = nil
}
